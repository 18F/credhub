buildscript {
    ext {
        kotlin_version = '1.0.2'
        springBootVersion = '1.3.5.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.owasp:dependency-check-gradle:1.3.6")
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlin_version}"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'org.owasp.dependencycheck'
apply plugin: 'jacoco'
apply plugin: 'checkstyle'

jar {
    baseName = 'sec-eng-credential-manager'
    version = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
checkstyle.toolVersion = '6.17'

repositories {
    mavenCentral()
}


dependencies {
    compile("org.jetbrains.kotlin:kotlin-stdlib:${kotlin_version}")
    compile('org.springframework.boot:spring-boot-starter-hateoas')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-actuator')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.passay:passay:1.1.0')
    compile('com.h2database:h2')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.skyscreamer:jsonassert')
}


eclipse {
    classpath {
        containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
        containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.12'
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/it/java')
        }
        resources.srcDir file('src/it/resources')
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

jacoco {
    toolVersion = "0.7.6.201602180812"
}

jacocoTestReport {
    group = "Reporting"
    reports {
        xml.enabled false
        csv.enabled false
        html.enabled true
        html.destination "${buildDir}/reports/jacoco"
    }
}

bootRun {
    addResources = true
}

test {
    jacoco {
        append = false
        destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
        classDumpFile = file("$buildDir/jacoco/classpathdumps")
    }
}

tasks.withType(Checkstyle) {
    reports {
        xml.enabled false
        html.enabled true
    }
}

tasks.check.dependsOn tasks.jacocoTestReport
tasks.check.dependsOn tasks.dependencyCheck
